The `matrix_divided` module
========================

Usage of the `matrix_divided` function
--------------------------------------

1. Import should work
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

2. It should work with the correct matrixes
>>> matrix_divided([[1, 2], [3, 4]], 1)
[[1.0, 2.0], [3.0, 4.0]]

3. It should raise the ZeroDivisionError
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

4. It should raise a TypeError
>>> matrix_divided([[0, 0], [0, 0]], 'Pi')
Traceback (most recent call last):
TypeError: div must be a number

6. It should raise TypeError
>>> matrix_divided([[1, 2], [3, 4], [5]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

7. It should create matrix with `nan` values
>>> matrix_divided([[0, 0], [0, 0]], float('NaN'))
[[nan, nan], [nan, nan]]

8. It should raise a TypeError
>>> matrix_divided([[1, 2], 'PI'], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

9. It should raise a TypeError
>>> matrix_divided([[0, 1], [2, 'PI']], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
